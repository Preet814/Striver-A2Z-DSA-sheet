Given a sorted array, arr[] and a number target, you need to find the number of occurrences of target in arr[]. 

Examples :
Input: arr[] = [1, 1, 2, 2, 2, 2, 3], target = 2
Output: 4
Explanation: target = 2 occurs 4 times in the given array so the output is 4.


class Solution {
  public:
    int firstOcc(vector<int>& nums, int s, int e, int target){
        int ans=-1;
        while(s<=e){
            int mid=(s+e)/2;
            if(nums[mid]==target){
                ans=mid;
                e=mid-1;
            }
            else if(nums[mid]<target)
                s=mid+1;
            else
                e=mid-1;
        }
        return ans;
    }
    int lastOcc(vector<int>& nums, int s, int e, int target){
        int ans=-1;
        while(s<=e){
            int mid=(s+e)/2;
            if(nums[mid]==target){
                ans=mid;
                s=mid+1;
            }
            else if(nums[mid]<target)
                s=mid+1;
            else
                e=mid-1;
        }
        return ans;
    }
    int countFreq(vector<int>& arr, int target) {
        int n=arr.size()-1;
        int first=firstOcc(arr,0,n,target);
        if(first==-1)
            return 0;
        return lastOcc(arr,0,n,target)-first+1;
    }
};
