Given an m x n matrix, return all elements of the matrix in spiral order.

Example 1:
Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,3,6,9,8,7,4,5]


class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& arr) {
        int n=arr.size();
        int m=arr[0].size();
        vector<int> ans;
        int l=0,r=m-1,t=0,d=n-1;
        while(true){
            if(t>d)
                break;
            for(int i=l;i<=r;i++){
                ans.push_back(arr[t][i]);
            }
            t++;
            if(l>r)
                break;
            for(int i=t;i<=d;i++){
                ans.push_back(arr[i][r]);
            }
            r--;
            if(t>d)
                break;
            for(int i=r;i>=l;i--){
                ans.push_back(arr[d][i]);
            }
            d--;
            if(l>r)
                break;
            for(int i=d;i>=t;i--){
                ans.push_back(arr[i][l]);
            }
            l++;
        }
        return ans;
    }
    
};
